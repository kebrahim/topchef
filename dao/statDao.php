<?php

require_once 'commonDao.php';
CommonDao::requireFileIn('/../entity/', 'chefStat.php');
CommonDao::requireFileIn('/../entity/', 'stat.php');
CommonDao::requireFileIn('/../entity/', 'statLine.php');

class StatDao {

  /**
   * Returns the stat with the specified ID
   */
  public static function getStatById($statId) {
  	CommonDao::connectToDb();
  	$query = "select s.* from stat s where s.stat_id = $statId";
  	return StatDao::createStatFromQuery($query);
  }
	
  public static function getMaxWeek() {
    CommonDao::connectToDb();
    $query = "select max(week) from chef_stat";
    $res = mysql_query($query);
    $row = mysql_fetch_row($res);
    return $row[0];
  }

  /**
   * Returns a single stat line for the specified player during the specified year and null if
   * it doesn't exist.
   */
  public static function getStatLineForChefWeek(Chef $chef, $week) {
    CommonDao::connectToDb();
    $query = "select cs.*, s.*
    	      from chef_stat cs, stat s
    	      where cs.week = $week and cs.chef_id = " . $chef->getId() .
            " and cs.stat_id = s.stat_id
              order by s.ordinal DESC";

    return StatDao::createStatLineFromQuery($query, $chef, $week);
  }

  private static function createStatLineFromQuery($query, $chef, $week) {
    $res = mysql_query($query);

    if (mysql_num_rows($res) == 0) {
      return null;
    }

    $statLine = new StatLine(-1, $week, $chef->getId(), null);
    $statsDb = array();
    while($statDb = mysql_fetch_assoc($res)) {
      $statsDb[] = StatDao::populateStat($statDb);
    }
    $statLine->setStats($statsDb);
    return $statLine;
  }

  private static function populateStat($statDb) {
    return new Stat($statDb["stat_id"], $statDb["name"], $statDb["points"],
        $statDb["abbreviation"], $statDb["short_name"], $statDb["ordinal"]);
  }

  /**
   * Returns the total fantasy points generated by the specified chef
   */
  public static function getTotalPointsByChef(Chef $chef) {
    CommonDao::connectToDb();
    $query = "select sum(s.points)
              from stat s, chef_stat cs
              where cs.chef_id = " . $chef->getId() .
            " and cs.stat_id = s.stat_id";
    $res = mysql_query($query);
    $row = mysql_fetch_row($res);
    return $row[0];
  }

  /**
   * Returns the total fantasy points generated by chefs for the specified team.
   */
  public static function getTotalPointsByTeam(Team $team) {
    CommonDao::connectToDb();
    $query = "select sum(s.points)
                from stat s, chef_stat cs, team_chef tc
                where tc.team_id = " . $team->getId() . " and tc.chef_id = cs.chef_id
                and cs.stat_id = s.stat_id";
    $res = mysql_query($query);
    $row = mysql_fetch_row($res);
    return $row[0];
  }

  /**
   * Returns the fantasy points generated by chefs for the specified team in the specified week.
   */
  public static function getWeeklyPointsByTeam(Team $team, $week) {
  	CommonDao::connectToDb();
  	$query = "select sum(s.points)
       	      from stat s, chef_stat cs, team_chef tc
  	          where tc.team_id = " . $team->getId() . " and tc.chef_id = cs.chef_id
  	          and cs.week = $week and cs.stat_id = s.stat_id";
  	$res = mysql_query($query);
  	$row = mysql_fetch_row($res);
  	return $row[0];
  }
  
  /**
   * Returns all of the stats
   */
  public static function getAllStats() {
    CommonDao::connectToDb();
    $query = "select *
              from stat
              order by ordinal";
    return StatDao::createStatsFromQuery($query);
  }

  private static function createStatFromQuery($query) {
    $statArray = StatDao::createStatsFromQuery($query);
    if (count($statArray) == 1) {
      return $statArray[0];
    }
    return null;
  }
  
  private static function createStatsFromQuery($query) {
    $res = mysql_query($query);
    $statsDb = array();
    while($statDb = mysql_fetch_assoc($res)) {
      $statsDb[] = StatDao::populateStat($statDb);
    }
    return $statsDb;
  }

  /**
   * Returns true if the specified chef has been eliminated.
   */
  public static function isEliminated(Chef $chef) {
  	CommonDao::connectToDb();
  	$query = "select count(*)
  	          from chef_stat cs, stat s
  	          where cs.chef_id = " . $chef->getId() . " and cs.stat_id = s.stat_id
  	          and s.abbreviation = '" . Stat::ELIMINATED . "'";
  	$res = mysql_query($query);
  	$row = mysql_fetch_row($res);
  	return ($row[0] == 1);
  }
  
  /**
   * Returns the week the specified chef was eliminated and null if the chef has not yet been
   * eliminated.
   */
  public static function getEliminationWeek(Chef $chef) {
  	CommonDao::connectToDb();
  	$query = "select cs.week
  	          from chef_stat cs, stat s
  	          where cs.chef_id = " . $chef->getId() . " and cs.stat_id = s.stat_id
  	          and s.abbreviation = '" . Stat::ELIMINATED . "'";
  	$res = mysql_query($query);
  	if (mysql_num_rows($res) == 0) {
  	  return null;
  	}
  	$chefStatDb = mysql_fetch_assoc($res);
  	return $chefStatDb["week"];
  }
  
  /**
   * Returns the number of chefs, belonging to the specified team, that have not yet been
   * eliminated.
   */
  public static function getRemainingChefCount($teamId) {
  	$totalChefCount = StatDao::getTotalChefsByTeam($teamId);
  	$query = "select count(*)
              from chef_stat cs, stat s, team_chef tc
              where cs.chef_id = tc.chef_id and tc.team_id = " . $teamId .
            " and cs.stat_id = s.stat_id
              and s.abbreviation = '" . Stat::ELIMINATED . "'";
  	$res = mysql_query($query);
  	$row = mysql_fetch_row($res);
  	return ($totalChefCount - $row[0]);
  }
  
  /**
   * Returns the number of chefs belonging to the specified team.
   */
  private static function getTotalChefsByTeam($teamId) {
  	CommonDao::connectToDb();
  	$query = "select count(*) from team_chef where team_id = " . $teamId;
  	$res = mysql_query($query);
  	$row = mysql_fetch_row($res);
  	return $row[0];
  }
  
  /**
   * Deletes all of the chefstats for the specified week.
   */
  public static function deleteForWeek($week) {
    CommonDao::connectToDb();
    $query = "delete from chef_stat where week = $week";
    mysql_query($query);
  }

  /**
   * Creates the specified chefstat in the 'chef_stat' table.
   */
  public static function createChefStat($chefStat) {
    CommonDao::connectToDb();
    $query = "insert into chef_stat(chef_id, stat_id, week) values (" .
              $chefStat->getChefId() . ", " .
              $chefStat->getStatId() . ", " .
              $chefStat->getWeek() . ")";
    $result = mysql_query($query);
    if (!$result) {
      echo "Error inserting chef Stat into DB. Try again.";
      return null;
    }

    $idQuery = "select chef_stat_id from chef_stat
                where chef_id = " . $chefStat->getChefId() .
              " and stat_id = " . $chefStat->getStatId() .
              " and week = " . $chefStat->getWeek();
    $result = mysql_query($idQuery) or die('Invalid query: ' . mysql_error());
    $row = mysql_fetch_assoc($result);
    $chefStat->setId($row["chef_stat_id"]);
    return $chefStat;
  }
}
?>